# 🌐 Projeto de Rede Social

Este é um sistema de rede social dividido em dois projetos:

- 🖥️ **Frontend:** \`frontend\` (Next.js + TailwindCSS + Zustand)
- ⚙️ **Backend:** \`backend\` (Express.js + Prisma + PostgreSQL)

---

## 🧱 Requisitos

Certifique-se de ter os seguintes itens instalados:

- [Node.js](https://nodejs.org) (v18 ou superior)
- [PostgreSQL](https://www.postgresql.org/) (ou outro banco compatível com Prisma)
- [Yarn](https://yarnpkg.com/) ou [npm](https://www.npmjs.com/)
- (Opcional) [Docker](https://www.docker.com/) — para facilitar banco de dados

---

## 📁 Estrutura do Projeto

\`\`\`
/meu-projeto/
├── frontend/ # Frontend (Next.js)
└── backend/ # Backend (Express + Prisma)
\`\`\`

---

## 🚀 Como rodar o projeto

### 1️⃣ Clone o repositório e acesse a pasta

\`\`\`bash
git clone https://github.com/seu-usuario/nome-do-projeto.git
cd nome-do-projeto
\`\`\`

---

## 🔧 Backend (\`backend\`)

### 📍 Instalar dependências

\`\`\`bash
cd backend
npm install

# ou

yarn install
\`\`\`

### 🗄️ Rodar migrações do Prisma

\`\`\`bash
npx prisma migrate dev --name init
\`\`\`

### ▶️ Iniciar o servidor backend

\`\`\`bash
npm run dev

# ou

yarn dev
\`\`\`

Servidor será iniciado em: [http://localhost:5000](http://localhost:5000)

---

## 🎨 Frontend (\`frontend\`)

### 📍 Instalar dependências

\`\`\`bash
cd ../frontend
npm install

# ou

yarn install
\`\`\`

### ⚙️ Configurar variáveis de ambiente

Crie um arquivo \`.env.local\` com base no seguinte:

\`\`\`env
NEXT_PUBLIC_API_URL=http://localhost:5000
CLOUDINARY_CLOUD_NAME=nome_da_nuvem
CLOUDINARY_UPLOAD_PRESET=seu_preset
\`\`\`

> Configure \`Cloudinary\` se você usa upload de imagem. Caso não use, pode ignorar.

### ▶️ Iniciar o frontend

\`\`\`bash
npm run dev

# ou

yarn dev
\`\`\`

A aplicação estará em: [http://localhost:3000](http://localhost:3000)

---

## 🧪 Testando a conexão

1. Acesse o frontend: [http://localhost:3000](http://localhost:3000)
2. Realize login ou navegue pelas funcionalidades.
3. Verifique se chamadas para a API (\`http://localhost:5000\`) funcionam corretamente.

---

## 🛠 Tecnologias

### Frontend

- Next.js
- Tailwind CSS
- Zustand
- Axios
- React Hook Form / Formik
- Cloudinary
- Toastify

### Backend

- Express.js
- Prisma ORM
- PostgreSQL
- JWT
- Socket.IO
- Multer (upload de arquivos)
- Winston (logs)

---

## 🧼 Scripts úteis

### Backend

\`\`\`bash

# Rodar servidor

npm run dev

# Build para produção

npm run build && npm run start

# Rodar migrações do Prisma

npm run prisma:migrate

# Gerar cliente Prisma

npm run prisma:generate
\`\`\`

### Frontend

\`\`\`bash

# Rodar frontend

npm run dev

# Build de produção

npm run build

# Lint do código

npm run lint
\`\`\`

---
